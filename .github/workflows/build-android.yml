name: Build Android for Firebase App Distribution

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'App version (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      build_number:
        description: 'Build number (e.g., 1)'
        required: true
        default: '1'

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v4
      with:
        flutter-version: 'stable'
        channel: 'stable'
        
    - name: Cache Flutter dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.pub-cache
          ${{ github.workspace }}/.dart_tool
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-
          
    - name: Cache Android dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Get Flutter dependencies
      run: flutter pub get
      
    - name: Setup Android signing
      run: |
        # 创建签名配置
        mkdir -p android/app
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/upload-keystore.jks
        
        # 创建key.properties文件
        cat > android/key.properties << EOF
        storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
        keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
        storeFile=upload-keystore.jks
        EOF
        
    - name: Build Android app
      run: |
        # 设置版本号
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
          BUILD_NUMBER="${{ github.event.inputs.build_number }}"
        else
          # 从tag获取版本号
          VERSION=${GITHUB_REF#refs/tags/v}
          BUILD_NUMBER=$(date +%s)
        fi
        
        echo "Building version $VERSION+$BUILD_NUMBER"
        
        # 构建Android应用
        flutter build apk --release --build-name=$VERSION --build-number=$BUILD_NUMBER
        
    - name: Upload to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{ secrets.FIREBASE_APP_ID }}
        serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
        groups: testers
        file: build/app/outputs/flutter-apk/app-release.apk
        releaseNotes: |
          Version: $VERSION
          Build: $BUILD_NUMBER
          Commit: ${{ github.sha }}
          
    - name: Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: build/app/outputs/flutter-apk/app-release.apk
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Android Release ${{ github.ref }}
        body: |
          Android build for Firebase App Distribution
          
          Version: ${{ github.ref_name }}
          Build: $(date +%s)
          
          Download the APK from Firebase App Distribution for testing.
        draft: false
        prerelease: false
